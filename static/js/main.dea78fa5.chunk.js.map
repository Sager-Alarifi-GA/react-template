{"version":3,"sources":["auth/components/AuthenticatedRoute.js","header/Header.js","apiConfig.js","auth/api.js","auth/messages.js","auth/components/SignUp.js","auth/components/SignIn.js","auth/components/SignOut.js","auth/components/ChangePassword.js","auth/components/AlertDismissible.js","App.js","index.js"],"names":["AuthenticatedRoute","user","Component","component","render","rest","props","to","authenticatedOptions","Fragment","unauthenticatedOptions","alwaysOptions","Header","className","email","apiUrls","production","development","apiUrl","window","location","hostname","signIn","credentials","axios","url","method","data","password","SignUp","handleChange","event","setState","target","name","value","onSignUp","preventDefault","alert","history","setUser","state","password_confirmation","passwordConfirmation","then","res","messages","push","catch","error","console","this","onSubmit","htmlFor","required","type","placeholder","onChange","withRouter","SignIn","onSignIn","SignOut","clearUser","headers","token","signOut","finally","ChangePassword","onChangePassword","passwords","old","oldPassword","new","newPassword","changePassword","AlertDismissible","show","Alert","key","index","dismissible","variant","onClose","Heading","message","React","App","alerts","map","path","appJsx","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.dea78fa5.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\n// props will include a `user` object or empty object\n// props will include a `component` as `Component` or a `render`\n// all other props that may be passed in are `..rest`\nconst AuthenticatedRoute = ({\n  user,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  // if props include a `user` object and a `render` then create route with `render`\n  if (user && render) {\n    return <Route {...rest} render={render} />\n\n  // if props include a `user` object but no `render` then create route with `Component`\n  // if props do not include a `user` object then redirect to home\n  } else {\n    return <Route {...rest} render={props =>\n      user ? <Component {...props} /> : <Redirect to='/' />\n    } />\n  }\n}\n\nexport default AuthenticatedRoute\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport './Header.scss'\n\nconst authenticatedOptions = (\n  <React.Fragment>\n    <Link to=\"/change-password\">Change Password</Link>\n    <Link to=\"/sign-out\">Sign Out</Link>\n  </React.Fragment>\n)\n\nconst unauthenticatedOptions = (\n  <React.Fragment>\n    <Link to=\"/sign-up\">Sign Up</Link>\n    <Link to=\"/sign-in\">Sign In</Link>\n  </React.Fragment>\n)\n\nconst alwaysOptions = (\n  <React.Fragment>\n    <Link to=\"/\">Home</Link>\n  </React.Fragment>\n)\n\nconst Header = ({ user }) => (\n  <header className=\"main-header\">\n    <h1>Uber, But For Taxis</h1>\n    <nav>\n      { user && <span>Welcome, {user.email}</span>}\n      { user ? authenticatedOptions : unauthenticatedOptions }\n      { alwaysOptions }\n    </nav>\n  </header>\n)\n\nexport default Header\n","let apiUrl;\nconst expressPort = 5000;\nconst apiUrls = {\n  production: \"hhttps://pacific-eyrie-74083.herokuapp.com/\",\n  development: `http://localhost:${expressPort}`\n};\n\nif (window.location.hostname === \"localhost\") {\n  apiUrl = apiUrls.development;\n} else {\n  apiUrl = apiUrls.production;\n}\n\nexport default apiUrl;\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = credentials => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/sign-up',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password,\n        password_confirmation: credentials.passwordConfirmation\n      }\n    }\n  })\n}\n\nexport const signIn = credentials => {\n  return axios({\n    url: apiUrl + '/sign-in',\n    method: 'POST',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password\n      }\n    }\n  })\n}\n\nexport const signOut = user => {\n  return axios({\n    url: apiUrl + '/sign-out',\n    method: 'DELETE',\n    headers: {\n      'Authorization': `Bearer ${user.token}` // FOR EXPRESS\n      // 'Authorization': `Token ${user.token}` // FOR RAILS\n    }\n  })\n}\n\nexport const changePassword = (passwords, user) => {\n  return axios({\n    url: apiUrl + '/change-password',\n    method: 'PATCH',\n    headers: {\n      'Authorization': `Bearer ${user.token}` // FOR EXPRESS\n      // 'Authorization': `Token ${user.token}` // FOR RAILS\n    },\n    data: {\n      passwords: {\n        old: passwords.oldPassword,\n        new: passwords.newPassword\n      }\n    }\n  })\n}\n","export default {\n  signUpSuccess: 'Succesfully registered! You\\'ve been signed in as well.',\n  signUpFailure: 'Registration failed. Email may be taked, or passwords' +\n   ' don\\'t match.',\n  signInSuccess: 'Welcome!',\n  signInFailure: 'Failed to sign in. Check your email and password and try' +\n                  ' again.',\n  signOutSuccess: 'Come back soon!',\n  changePasswordSuccess: 'Password changed successfully!',\n  changePasswordFailure: 'Failed to change passwords. Check your old password' +\n                         ' and try again.'\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signUp, signIn } from '../api'\nimport messages from '../messages'\n\nclass SignUp extends Component {\n  constructor () {\n    super()\n\n    this.state = {\n      email: '',\n      password: '',\n      passwordConfirmation: ''\n    }\n  }\n\n  handleChange = event => this.setState({\n    [event.target.name]: event.target.value\n  })\n\n  onSignUp = event => {\n    event.preventDefault()\n\n    const { alert, history, setUser } = this.props\n\n    signUp(this.state)\n      .then(() => signIn(this.state))\n      .then(res => setUser(res.data.user))\n      .then(() => alert(messages.signUpSuccess, 'success'))\n      .then(() => history.push('/'))\n      .catch(error => {\n        console.error(error)\n        this.setState({ email: '', password: '', passwordConfirmation: '' })\n        alert(messages.signUpFailure, 'danger')\n      })\n  }\n\n  render () {\n    const { email, password, passwordConfirmation } = this.state\n\n    return (\n      <form className='auth-form' onSubmit={this.onSignUp}>\n        <h3>Sign Up</h3>\n\n        <label htmlFor=\"email\">Email</label>\n        <input\n          required\n          name=\"email\"\n          value={email}\n          type=\"email\"\n          placeholder=\"Email\"\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"password\">Password</label>\n        <input\n          required\n          name=\"password\"\n          value={password}\n          type=\"password\"\n          placeholder=\"Password\"\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"passwordConfirmation\">Confirm Password</label>\n        <input\n          required\n          name=\"passwordConfirmation\"\n          value={passwordConfirmation}\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n          onChange={this.handleChange}\n        />\n        <button type=\"submit\">Sign Up</button>\n      </form>\n    )\n  }\n}\n\nexport default withRouter(SignUp)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signIn } from '../api'\nimport messages from '../messages'\n\nclass SignIn extends Component {\n  constructor () {\n    super()\n\n    this.state = {\n      email: '',\n      password: ''\n    }\n  }\n\n  handleChange = event => this.setState({\n    [event.target.name]: event.target.value\n  })\n\n  onSignIn = event => {\n    event.preventDefault()\n\n    const { alert, history, setUser } = this.props\n\n    signIn(this.state)\n      .then(res => setUser(res.data.user))\n      .then(() => alert(messages.signInSuccess, 'success'))\n      .then(() => history.push('/'))\n      .catch(error => {\n        console.error(error)\n        this.setState({ email: '', password: '' })\n        alert(messages.signInFailure, 'danger')\n      })\n  }\n\n  render () {\n    const { email, password } = this.state\n\n    return (\n      <form className='auth-form' onSubmit={this.onSignIn}>\n        <h3>Sign In</h3>\n        <label htmlFor=\"email\">Email</label>\n        <input\n          required\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          placeholder=\"Email\"\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"password\">Password</label>\n        <input\n          required\n          name=\"password\"\n          value={password}\n          type=\"password\"\n          placeholder=\"Password\"\n          onChange={this.handleChange}\n        />\n        <button type=\"submit\">Sign In</button>\n      </form>\n    )\n  }\n}\n\nexport default withRouter(SignIn)\n","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signOut } from '../api'\nimport messages from '../messages'\n\nclass SignOut extends Component {\n  componentDidMount () {\n    const { alert, history, clearUser, user } = this.props\n\n    signOut(user)\n      .finally(() => alert(messages.signOutSuccess, 'success'))\n      .finally(() => history.push('/'))\n      .finally(() => clearUser())\n  }\n\n  render () {\n    return ''\n  }\n}\n\nexport default withRouter(SignOut)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { changePassword } from '../api'\nimport messages from '../messages'\n\nclass ChangePassword extends Component {\n  constructor () {\n    super()\n\n    this.state = {\n      oldPassword: '',\n      newPassword: ''\n    }\n  }\n\n  handleChange = event => this.setState({\n    [event.target.name]: event.target.value\n  })\n\n  onChangePassword = event => {\n    event.preventDefault()\n\n    const { alert, history, user } = this.props\n\n    changePassword(this.state, user)\n      .then(() => alert(messages.changePasswordSuccess, 'success'))\n      .then(() => history.push('/'))\n      .catch(error => {\n        console.error(error)\n        this.setState({ oldPassword: '', newPassword: '' })\n        alert(messages.changePasswordFailure, 'danger')\n      })\n  }\n\n  render () {\n    const { oldPassword, newPassword } = this.state\n\n    return (\n      <form className='auth-form' onSubmit={this.onChangePassword}>\n        <h3>Change Password</h3>\n\n        <label htmlFor=\"oldpw\">Old Password</label>\n        <input\n          required\n          name=\"oldPassword\"\n          value={oldPassword}\n          type=\"password\"\n          placeholder=\"Old Password\"\n          onChange={this.handleChange}\n        />\n        <label htmlFor=\"newPassword\">New Password</label>\n        <input\n          required\n          name=\"newPassword\"\n          value={newPassword}\n          type=\"password\"\n          placeholder=\"New Password\"\n          onChange={this.handleChange}\n        />\n        <button type=\"submit\">Change Password</button>\n      </form>\n    )\n  }\n}\n\nexport default withRouter(ChangePassword)\n","import React, { Component } from 'react'\nimport Alert from 'react-bootstrap/Alert'\n\nclass AlertDismissible extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        show: true,\n      };\n    }\n  \n    render() {\n      const handleDismiss = () => this.setState({ show: false });\n      if (this.state.show) {\n        return (\n            <Alert key={this.props.index} dismissible variant={this.props.variant} onClose={handleDismiss}>\n                <Alert.Heading>\n                    {this.props.message}\n                </Alert.Heading>\n            </Alert>\n        )\n      } else {\n        return <React.Fragment/>\n      }\n    }\n  }\n  \nexport default AlertDismissible\n","import React, { Component } from 'react'\nimport './App.scss'\nimport { Route } from 'react-router-dom'\n\nimport AuthenticatedRoute from './auth/components/AuthenticatedRoute'\nimport Header from './header/Header'\nimport SignUp from './auth/components/SignUp'\nimport SignIn from './auth/components/SignIn'\nimport SignOut from './auth/components/SignOut'\nimport ChangePassword from './auth/components/ChangePassword'\nimport AlertDismissible from './auth/components/AlertDismissible'\n\nclass App extends Component {\n  constructor () {\n    super()\n\n    this.state = {\n      user: null,\n      alerts: []\n    }\n  }\n\n  setUser = user => this.setState({ user })\n\n  clearUser = () => this.setState({ user: null })\n\n  alert = (message, type) => {\n    this.setState({ alerts: [...this.state.alerts, { message, type }] })\n  }\n\n  render () {\n    const { alerts, user } = this.state\n\n    return (\n      <React.Fragment>\n        <Header user={user} />\n        {alerts.map((alert, index) => (\n          <AlertDismissible key={index} variant={alert.type} message={alert.message} />\n        ))}\n        <main className=\"container\">\n          <Route path='/sign-up' render={() => (\n            <SignUp alert={this.alert} setUser={this.setUser} />\n          )} />\n          <Route path='/sign-in' render={() => (\n            <SignIn alert={this.alert} setUser={this.setUser} />\n          )} />\n          <AuthenticatedRoute user={user} path='/sign-out' render={() => (\n            <SignOut alert={this.alert} clearUser={this.clearUser} user={user} />\n          )} />\n          <AuthenticatedRoute user={user} path='/change-password' render={() => (\n            <ChangePassword alert={this.alert} user={user} />\n          )} />\n        </main>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App'\nimport { HashRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <HashRouter>\n    <App />\n  </HashRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}